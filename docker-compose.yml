version: '3.8'

services:
  mysql:
    image: mysql:latest
    environment:
      MYSQL_HOST: 'mysql'
      MYSQL_DATABASE: 'amourlink'
      MYSQL_ROOT_PASSWORD: '123'
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  discovery:
    image: danyloz/amourlink-java-media-service:1.2
    ports:
      - "8761:8761"
    networks:
      - app-network
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"

  media-service:
    image: danyloz/amourlink-java-media-service:1.2
    depends_on:
      - discovery
    ports:
      - "8070:8070"
    networks:
      - app-network
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"

  user-service:
    image: danyloz/amourlink-java-user-service:1.3
    depends_on:
      - discovery
      - media-service
    ports:
      - "8090:8090"
    networks:
      - app-network
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9999
    volumes:
      - kafka_data:/var/lib/kafka/data


volumes:
  mysql-data:
  zookeeper_data:
  zookeeper_log:
  kafka_data:

networks:
  app-network:
    driver: bridge
